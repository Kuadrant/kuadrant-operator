name: Build Images

on:
  push:
    branches: ['*']
    tags: ['*']
  workflow_call:
  workflow_dispatch:
    inputs:
      authorinoOperatorBundleVersion:
        description: Authorino Operator bundle version
        required: true
        default: latest
      limitadorOperatorBundleVersion:
        description: Limitador Operator bundle version
        required: true
        default: latest
      wasmShimVersion:
        description: WASM Shim version
        required: true
        default: latest

env:
  IMG_TAGS: ${{ github.sha }}
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: kuadrant
  MAIN_BRANCH_NAME: main
  OPERATOR_NAME: kuadrant-operator

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Add branch tag
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        id: add-branch-tag
        run: |
          echo "IMG_TAGS=${GITHUB_REF_NAME/\//-} ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Set Operator version
        id: operator-version
        run: |
          if [[ ${GITHUB_REF_NAME/\//-} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
          echo "VERSION=${GITHUB_REF_NAME/\//-}" >> $GITHUB_ENV
          else
          echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV
          fi
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64
          dockerfiles: |
            ./Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-bundle:
    needs: build
    name: Build Bundle
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.18.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
        id: go
      - name: Check out code
        uses: actions/checkout@v2
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Add release tag
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        id: add-branch-tag
        run: |
          TAG_NAME=${GITHUB_REF_NAME/\//-}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "IMG_TAGS=${TAG_NAME} ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Set Operator version
        id: operator-version
        run: |
          if [[ ${GITHUB_REF_NAME/\//-} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
          echo "VERSION=${GITHUB_REF_NAME/\//-}" >> $GITHUB_ENV
          else
          echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV
          fi
      - name: Add SHA tags if triggered by scheduled workflow
        if: ${{ github.event_name == "workflow_call" }}
        id: set-dependencies-sha-tags
        run: |
          echo "Setting dependencies image versions from stored variables..."
          echo "AUTHORINO_OPERATOR_VERSION=${vars.AUTHORINO_OPERATOR_BUNDLE_SHA}" >> $GITHUB_ENV
          echo "LIMITADOR_OPERATOR_VERSION=${vars.LIMITADOR_OPERATOR_BUNDLE_SHA}  >> $GITHUB_ENV
          echo "WASM_SHIM_VERSION=${vars.WASM_SHIM_SHA}  >> $GITHUB_ENV
      - name: Add specific tags if triggered by workflow dispatch
        if: ${{ github.event_name == "workflow_dispatch" }}
        id: set-dependencies-specific-tags
        run: |
          echo "Setting dependencies image versions from user input..."
          echo "AUTHORINO_OPERATOR_VERSION=${github.event.inputs.authorinoOperatorBundleVersion}" >> $GITHUB_ENV
          echo "LIMITADOR_OPERATOR_VERSION=${github.event.inputs.limitadorOperatorBundleVersion}  >> $GITHUB_ENV
          echo "WASM_SHIM_VERSION=${github.event.inputs.wasmShimVersion}  >> $GITHUB_ENV
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Run make bundle
        run: |
          if [[ ${github.event_name} == "workflow_call" || ${github.event_name} == "workflow_dispatch" ]]; then
          echo "Building bundle via workflow call"
          make bundle REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} VERSION=${TAG_NAME/v/} AUTHORINO_OPERATOR_VERSION=${env.AUTHORINO_OPERATOR_VERSION} LIMITADOR_OPERATOR_VERSION=${env.LIMITADOR_OPERATOR_VERSION} WASM_SHIM_VERSION=${env.WASM_SHIM_VERSION}
          else
          make bundle REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} IMAGE_TAG=${{ github.ref_name }}
          fi
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}-bundle
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64
          dockerfiles: |
            ./bundle.Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-catalog:
    name: Build Catalog
    needs: [build, build-bundle]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.18.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
        id: go
      - name: Check out code
        uses: actions/checkout@v2
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Generate Catalog Content
        run: make catalog
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}-catalog
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64
          context: ./catalog
          dockerfiles: |
            ./catalog/kuadrant-operator-catalog.Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
