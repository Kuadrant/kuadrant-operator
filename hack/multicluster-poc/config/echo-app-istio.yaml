---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: my-route-coredns
spec:
  parentRefs:
    - kind: Gateway
      name: prod-web-istio-coredns
  hostnames:
    - "myapp.k.example.com"
  rules:
    - backendRefs:
        - name: echo
          port: 8080
#---
#apiVersion: gateway.networking.k8s.io/v1beta1
#kind: HTTPRoute
#metadata:
#  name: my-route-aws
#spec:
#  parentRefs:
#    - kind: Gateway
#      name: prod-web-istio-aws
#  hostnames:
#    - "myapp.mn.hcpapps.net"
#  rules:
#    - backendRefs:
#        - name: echo
#          port: 8080
#---
#apiVersion: gateway.networking.k8s.io/v1beta1
#kind: HTTPRoute
#metadata:
#  name: my-route-aws2
#spec:
#  parentRefs:
#    - kind: Gateway
#      name: prod-web-istio-aws2
#  hostnames:
#    - "myapp.mn.hcpapps.net"
#    - "myapp2.mn.hcpapps.net"
#  rules:
#    - backendRefs:
#        - name: echo
#          port: 8080
#---
#apiVersion: gateway.networking.k8s.io/v1beta1
#kind: HTTPRoute
#metadata:
#  name: my-route-gcp
#spec:
#  parentRefs:
#    - kind: Gateway
#      name: prod-web-istio-gcp
#  hostnames:
#    - "myapp.mn.google.hcpapps.net"
#    - "myapp2.mn.google.hcpapps.net"
#  rules:
#    - backendRefs:
#        - name: echo
#          port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: echo
spec:
  ports:
    - name: http-port
      port: 8080
      targetPort: http-port
      protocol: TCP
  selector:
    app: echo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      labels:
        app: echo
    spec:
      containers:
        - name: echo
          image: docker.io/jmalloc/echo-server
          ports:
            - name: http-port
              containerPort: 8080
              protocol: TCP
