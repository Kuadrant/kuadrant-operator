// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: v0/common.proto

package v0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// shared
type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_v0_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_v0_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_v0_common_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Metadata) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type TargetRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SectionName   string                 `protobuf:"bytes,5,opt,name=sectionName,proto3" json:"sectionName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetRef) Reset() {
	*x = TargetRef{}
	mi := &file_v0_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetRef) ProtoMessage() {}

func (x *TargetRef) ProtoReflect() protoreflect.Message {
	mi := &file_v0_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetRef.ProtoReflect.Descriptor instead.
func (*TargetRef) Descriptor() ([]byte, []int) {
	return file_v0_common_proto_rawDescGZIP(), []int{1}
}

func (x *TargetRef) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *TargetRef) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TargetRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TargetRef) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TargetRef) GetSectionName() string {
	if x != nil {
		return x.SectionName
	}
	return ""
}

type Condition struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Type               string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ConditionStatus    string                 `protobuf:"bytes,2,opt,name=ConditionStatus,proto3" json:"ConditionStatus,omitempty"`
	ObservedGeneration int64                  `protobuf:"varint,3,opt,name=observedGeneration,proto3" json:"observedGeneration,omitempty"`
	Reason             string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Message            string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_v0_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_v0_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_v0_common_proto_rawDescGZIP(), []int{2}
}

func (x *Condition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Condition) GetConditionStatus() string {
	if x != nil {
		return x.ConditionStatus
	}
	return ""
}

func (x *Condition) GetObservedGeneration() int64 {
	if x != nil {
		return x.ObservedGeneration
	}
	return 0
}

func (x *Condition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Condition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConditionStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConditionStatus) Reset() {
	*x = ConditionStatus{}
	mi := &file_v0_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConditionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionStatus) ProtoMessage() {}

func (x *ConditionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_v0_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionStatus.ProtoReflect.Descriptor instead.
func (*ConditionStatus) Descriptor() ([]byte, []int) {
	return file_v0_common_proto_rawDescGZIP(), []int{3}
}

func (x *ConditionStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_v0_common_proto protoreflect.FileDescriptor

const file_v0_common_proto_rawDesc = "" +
	"\n" +
	"\x0fv0/common.proto\x12\vkuadrant.v0\"f\n" +
	"\bMetadata\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\x89\x01\n" +
	"\tTargetRef\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12 \n" +
	"\vsectionName\x18\x05 \x01(\tR\vsectionName\"\xab\x01\n" +
	"\tCondition\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12(\n" +
	"\x0fConditionStatus\x18\x02 \x01(\tR\x0fConditionStatus\x12.\n" +
	"\x12observedGeneration\x18\x03 \x01(\x03R\x12observedGeneration\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\")\n" +
	"\x0fConditionStatus\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06statusB\x05Z\x03/v0b\x06proto3"

var (
	file_v0_common_proto_rawDescOnce sync.Once
	file_v0_common_proto_rawDescData []byte
)

func file_v0_common_proto_rawDescGZIP() []byte {
	file_v0_common_proto_rawDescOnce.Do(func() {
		file_v0_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v0_common_proto_rawDesc), len(file_v0_common_proto_rawDesc)))
	})
	return file_v0_common_proto_rawDescData
}

var file_v0_common_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v0_common_proto_goTypes = []any{
	(*Metadata)(nil),        // 0: kuadrant.v0.Metadata
	(*TargetRef)(nil),       // 1: kuadrant.v0.TargetRef
	(*Condition)(nil),       // 2: kuadrant.v0.Condition
	(*ConditionStatus)(nil), // 3: kuadrant.v0.ConditionStatus
}
var file_v0_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v0_common_proto_init() }
func file_v0_common_proto_init() {
	if File_v0_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v0_common_proto_rawDesc), len(file_v0_common_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v0_common_proto_goTypes,
		DependencyIndexes: file_v0_common_proto_depIdxs,
		MessageInfos:      file_v0_common_proto_msgTypes,
	}.Build()
	File_v0_common_proto = out.File
	file_v0_common_proto_goTypes = nil
	file_v0_common_proto_depIdxs = nil
}
